"""
给定一串长度不超过 10​5​​ 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 PAT (Basic)，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。
输入格式：

输入在一行中给出长度不超过 10​5​​、以回车结束的字符串。
输出格式：

在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。
输入样例：

PAT (Basic)

输出样例：

3 4
"""

##############################
"""
题目非常简单，一次通过
注意使用函数时的括号问题：str.isalpha在本例中无用，而str.isalpha()才正确
"""
##############################

seq = input().upper()
N = 0
for i in seq:
    #if 'A' <= i <= 'Z':
    if i.isalpha():
        N += ord(i) - 64
n = [0] * 2
while N != 0:
    n[N % 2] += 1
    N = N // 2
print(n[0],n[1])