"""
本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。
输入格式：

输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。
输出格式：

在一行中输出加密后的结果。
输入样例：

1234567 368782971

输出样例：

3695Q8118
"""

############################################################################################################
#非常简单，一次通过
#注意python中 string类型不可修改！
############################################################################################################

A, B = input().split()
if len(A) > len(B):
    B = '0' * (len(A) - len(B)) + B
elif len(B) > len(A):
    A = '0' * (len(B) - len(A)) + A
odd = True
C = ['0'] * len(A)
trans = ['0','1','2','3','4','5','6','7','8','9','J','Q','K']
for i in range(len(A)):
    if odd:
        C[len(A) - i - 1] = trans[(int(B[len(A) - i - 1]) + int(A[len(A) - i - 1])) % 13]
        odd = not odd
    else:
        C[len(A) - i - 1] = str((int(B[len(A) - i - 1]) - int(A[len(A) - i - 1]) + 10) % 10)
        odd = not odd
print(''.join(C))